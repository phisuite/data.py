# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import common_pb2 as common__pb2
import process_pb2 as process__pb2


class ProcessAPIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Execute = channel.stream_stream(
        '/data.ProcessAPI/Execute',
        request_serializer=process__pb2.ProcessRequest.SerializeToString,
        response_deserializer=process__pb2.ProcessResponse.FromString,
        )
    self.Record = channel.unary_unary(
        '/data.ProcessAPI/Record',
        request_serializer=process__pb2.Process.SerializeToString,
        response_deserializer=process__pb2.Process.FromString,
        )
    self.List = channel.unary_stream(
        '/data.ProcessAPI/List',
        request_serializer=common__pb2.Options.SerializeToString,
        response_deserializer=process__pb2.Process.FromString,
        )
    self.Success = channel.unary_stream(
        '/data.ProcessAPI/Success',
        request_serializer=common__pb2.Options.SerializeToString,
        response_deserializer=process__pb2.Process.FromString,
        )
    self.Failure = channel.unary_stream(
        '/data.ProcessAPI/Failure',
        request_serializer=common__pb2.Options.SerializeToString,
        response_deserializer=process__pb2.Process.FromString,
        )


class ProcessAPIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Execute(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Record(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def List(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Success(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Failure(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProcessAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Execute': grpc.stream_stream_rpc_method_handler(
          servicer.Execute,
          request_deserializer=process__pb2.ProcessRequest.FromString,
          response_serializer=process__pb2.ProcessResponse.SerializeToString,
      ),
      'Record': grpc.unary_unary_rpc_method_handler(
          servicer.Record,
          request_deserializer=process__pb2.Process.FromString,
          response_serializer=process__pb2.Process.SerializeToString,
      ),
      'List': grpc.unary_stream_rpc_method_handler(
          servicer.List,
          request_deserializer=common__pb2.Options.FromString,
          response_serializer=process__pb2.Process.SerializeToString,
      ),
      'Success': grpc.unary_stream_rpc_method_handler(
          servicer.Success,
          request_deserializer=common__pb2.Options.FromString,
          response_serializer=process__pb2.Process.SerializeToString,
      ),
      'Failure': grpc.unary_stream_rpc_method_handler(
          servicer.Failure,
          request_deserializer=common__pb2.Options.FromString,
          response_serializer=process__pb2.Process.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'data.ProcessAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
